//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VKMusicRemote.ConsoleTest.MusicService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Song", Namespace="http://schemas.datacontract.org/2004/07/VKMusicRemote.DataTransferObjects")]
    [System.SerializableAttribute()]
    public partial class Song : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Length {
            get {
                return this.LengthField;
            }
            set {
                if ((object.ReferenceEquals(this.LengthField, value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MusicService.IMusicService")]
    public interface IMusicService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUserMusic", ReplyAction="http://tempuri.org/IMusicService/GetUserMusicResponse")]
        VKMusicRemote.ConsoleTest.MusicService.Song[] GetUserMusic();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUserMusic", ReplyAction="http://tempuri.org/IMusicService/GetUserMusicResponse")]
        System.Threading.Tasks.Task<VKMusicRemote.ConsoleTest.MusicService.Song[]> GetUserMusicAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/PlaySong", ReplyAction="http://tempuri.org/IMusicService/PlaySongResponse")]
        bool PlaySong(VKMusicRemote.ConsoleTest.MusicService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/PlaySong", ReplyAction="http://tempuri.org/IMusicService/PlaySongResponse")]
        System.Threading.Tasks.Task<bool> PlaySongAsync(VKMusicRemote.ConsoleTest.MusicService.Song song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/SearchSongs", ReplyAction="http://tempuri.org/IMusicService/SearchSongsResponse")]
        VKMusicRemote.ConsoleTest.MusicService.Song[] SearchSongs(string criterea, bool searchInOwnSongs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/SearchSongs", ReplyAction="http://tempuri.org/IMusicService/SearchSongsResponse")]
        System.Threading.Tasks.Task<VKMusicRemote.ConsoleTest.MusicService.Song[]> SearchSongsAsync(string criterea, bool searchInOwnSongs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/SwitchPlayback", ReplyAction="http://tempuri.org/IMusicService/SwitchPlaybackResponse")]
        bool SwitchPlayback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/SwitchPlayback", ReplyAction="http://tempuri.org/IMusicService/SwitchPlaybackResponse")]
        System.Threading.Tasks.Task<bool> SwitchPlaybackAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMusicServiceChannel : VKMusicRemote.ConsoleTest.MusicService.IMusicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MusicServiceClient : System.ServiceModel.ClientBase<VKMusicRemote.ConsoleTest.MusicService.IMusicService>, VKMusicRemote.ConsoleTest.MusicService.IMusicService {
        
        public MusicServiceClient() {
        }
        
        public MusicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MusicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VKMusicRemote.ConsoleTest.MusicService.Song[] GetUserMusic() {
            return base.Channel.GetUserMusic();
        }
        
        public System.Threading.Tasks.Task<VKMusicRemote.ConsoleTest.MusicService.Song[]> GetUserMusicAsync() {
            return base.Channel.GetUserMusicAsync();
        }
        
        public bool PlaySong(VKMusicRemote.ConsoleTest.MusicService.Song song) {
            return base.Channel.PlaySong(song);
        }
        
        public System.Threading.Tasks.Task<bool> PlaySongAsync(VKMusicRemote.ConsoleTest.MusicService.Song song) {
            return base.Channel.PlaySongAsync(song);
        }
        
        public VKMusicRemote.ConsoleTest.MusicService.Song[] SearchSongs(string criterea, bool searchInOwnSongs) {
            return base.Channel.SearchSongs(criterea, searchInOwnSongs);
        }
        
        public System.Threading.Tasks.Task<VKMusicRemote.ConsoleTest.MusicService.Song[]> SearchSongsAsync(string criterea, bool searchInOwnSongs) {
            return base.Channel.SearchSongsAsync(criterea, searchInOwnSongs);
        }
        
        public bool SwitchPlayback() {
            return base.Channel.SwitchPlayback();
        }
        
        public System.Threading.Tasks.Task<bool> SwitchPlaybackAsync() {
            return base.Channel.SwitchPlaybackAsync();
        }
    }
}
