//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VKMusicRemote.ConsoleTest.LoginService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInformation", Namespace="http://schemas.datacontract.org/2004/07/VKMusicRemote.Selenium.Login")]
    [System.SerializableAttribute()]
    public partial class LoginInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VKMusicRemote.ConsoleTest.LoginService.LoginError ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VKMusicRemote.ConsoleTest.LoginService.LoginError ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((this.ErrorTypeField.Equals(value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginError", Namespace="http://schemas.datacontract.org/2004/07/VKMusicRemote.Selenium.Login")]
    public enum LoginError : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoFactorAuthenticationRequired = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToLogin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongPasswordOrLogin = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginService.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/IsLogged", ReplyAction="http://tempuri.org/ILoginService/IsLoggedResponse")]
        bool IsLogged();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/IsLogged", ReplyAction="http://tempuri.org/ILoginService/IsLoggedResponse")]
        System.Threading.Tasks.Task<bool> IsLoggedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        VKMusicRemote.ConsoleTest.LoginService.LoginInformation Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.Threading.Tasks.Task<VKMusicRemote.ConsoleTest.LoginService.LoginInformation> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Logout", ReplyAction="http://tempuri.org/ILoginService/LogoutResponse")]
        bool Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Logout", ReplyAction="http://tempuri.org/ILoginService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/TwoFactorAuthentication", ReplyAction="http://tempuri.org/ILoginService/TwoFactorAuthenticationResponse")]
        bool TwoFactorAuthentication(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/TwoFactorAuthentication", ReplyAction="http://tempuri.org/ILoginService/TwoFactorAuthenticationResponse")]
        System.Threading.Tasks.Task<bool> TwoFactorAuthenticationAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : VKMusicRemote.ConsoleTest.LoginService.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<VKMusicRemote.ConsoleTest.LoginService.ILoginService>, VKMusicRemote.ConsoleTest.LoginService.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsLogged() {
            return base.Channel.IsLogged();
        }
        
        public System.Threading.Tasks.Task<bool> IsLoggedAsync() {
            return base.Channel.IsLoggedAsync();
        }
        
        public VKMusicRemote.ConsoleTest.LoginService.LoginInformation Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<VKMusicRemote.ConsoleTest.LoginService.LoginInformation> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public bool Logout() {
            return base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public bool TwoFactorAuthentication(string code) {
            return base.Channel.TwoFactorAuthentication(code);
        }
        
        public System.Threading.Tasks.Task<bool> TwoFactorAuthenticationAsync(string code) {
            return base.Channel.TwoFactorAuthenticationAsync(code);
        }
    }
}
